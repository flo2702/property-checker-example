plugins {
    id 'java'
    id 'maven-publish'
    id 'eclipse'
}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

configurations {
    // for putting Error Prone javac in bootclasspath for running tests
    errorproneJavac
}

ext.versions = [
        checkerFramework: "3.8.0",
]

sourceCompatibility = 1.8
def checkerframework_local = true  // Set this variable to [true] while using local version of checker framework.

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    if (checkerframework_local) {
        implementation files('../property-types/property-checker/checker-framework/dist/checker.jar')
        implementation files('../property-types/property-checker/checker-framework/dist/checker-qual.jar')
        
    }
    else {
        implementation "org.checkerframework:checker:${versions.checkerFramework}"
    }

  	implementation "com.google.guava:guava:30.1-jre" 
  	implementation "org.apache.commons:commons-lang3:3.11"
  	implementation "org.apache.commons:commons-io:1.3.2"
    compileOnly "com.google.errorprone:javac:9+181-r4173-1"

    // Testing
    testImplementation 'junit:junit:4.13'
    if (checkerframework_local) {
        testCompile files('../property-types/property-checker/checker-framework/dist/checker.jar')
    	testCompile files('../property-types/property-checker/checker-framework/dist/checker-qual.jar')
    }
    testCompile "org.checkerframework:framework-test:${versions.checkerFramework}"

    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
}

tasks.withType(JavaCompile).all {
    options.compilerArgs.add("-Xlint:all")
}

test {
    inputs.files("tests/property")
    if (!JavaVersion.current().java9Compatible) {
        jvmArgs "-Xbootclasspath/p:${configurations.errorproneJavac.asPath}"
    }
    testLogging.showStandardStreams = true
}
